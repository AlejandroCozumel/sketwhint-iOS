# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore & Swift.gitignore

## User settings
xcuserdata/

## Compatibility with Xcode 8 and earlier (ignoring not required starting Xcode 9)
*.xcscmblueprint
*.xccheckout

## Compatibility with Xcode 3 and earlier (ignoring not required starting Xcode 4)
build/
DerivedData/
*.moved-aside
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3

## Obj-C/Swift specific
*.hmap

## App packaging
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
# Package.resolved
# *.xcodeproj
#
# Xcode automatically generates this directory with a .xcworkspacedata file and xcuserdata
# hence it is not needed unless you have added a package configuration file to your project
# .swiftpm

.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/
#
# Add this line if you're using CocoaPods and want to ignore the workspace file
# *.xcworkspace

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build/

# Accio dependency management
Dependencies/
.accio/

# fastlane
#
# It is recommended to not store the screenshots in the git repo.
# Instead, use fastlane to re-generate the screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots/**/*.png
fastlane/test_output

# Code Injection
#
# After new code Injection tools there's a generated folder /iOSInjectionProject
# https://github.com/johnno1962/injectionforxcode

iOSInjectionProject/

## macOS specific files
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon

# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

## IDE & Editor files
.vscode/
.idea/
*.swp
*.swo
*~

# Vim
*.swp
*.swo

# Emacs
*~
\#*\#
/.emacs.desktop
/.emacs.desktop.lock
*.elc
auto-save-list
tramp
.\#*

# Sublime Text
*.tmlanguage.cache
*.tmPreferences.cache
*.stTheme.cache
*.sublime-workspace
*.sublime-project

## Environment & Config files
.env
.env.local
.env.*.local

# Configuration files with sensitive data
config.plist
Config.plist
secrets.plist
Secrets.plist

## API Keys & Secrets (common naming patterns)
*APIKey*
*Secret*
*secrets*
*credentials*
GoogleService-Info.plist
google-services.json

## Firebase
GoogleService-Info.plist
firebase_options.dart

## Certificates & Provisioning Profiles
*.p12
*.mobileprovision
*.cer
*.certSigningRequest

## App Store Connect API
AuthKey_*.p8

## TestFlight & App Store
*.xcarchive

## Simulator & Device Logs
*.crash
*.ips

## Testing
*.gcno
*.gcda
coverage.xml
test-results.xml

## Documentation Build
docs/_build/
site/

## Temporary files
*.tmp
*.temp
*~
.#*

## Archives & Compressed files
*.zip
*.tar.gz
*.tar.bz2
*.rar
*.7z

## Backup files
*.backup
*.bak
*.orig

## Version control
.svn/
.hg/
.bzr/

## AI/ML Models (if using Core ML)
*.mlmodel
*.mlmodelc

## Sketch files (if designers use Sketch)
*.sketch

## Claude Code specific (if using Claude Code)
.claude/
claude.json

## npm/yarn (if using React Native or web components)
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

## Python (if using Python scripts for build automation)
__pycache__/
*.py[cod]
*$py.class
*.so
.Python
env/
venv/

## Ruby (if using Ruby scripts or CocoaPods)
*.gem
.bundle/
vendor/bundle/

## Logs
logs/
*.log
log/

## Runtime data
pids/
*.pid
*.seed
*.pid.lock

## Directory for instrumented libs generated by jscoverage/JSCover
lib-cov/

## Coverage directory used by tools like istanbul
coverage/

## OS generated files
Thumbs.db
ehthumbs.db
Desktop.ini

## Project specific exclusions (customize as needed)
# Uncomment and customize based on your project structure

# Local configuration overrides
# local.xcconfig

# Generated files
# Generated/

# Third-party frameworks
# Frameworks/

# Custom build outputs
# Output/

# Local development databases
# *.sqlite
# *.db

# Local cache directories
# Cache/
# .cache/

## SketchWink specific files (add your app-specific ignores here)
# User generated content cache
# UserContent/
# Generated art cache
# ArtCache/
# Local user profiles
# LocalProfiles/